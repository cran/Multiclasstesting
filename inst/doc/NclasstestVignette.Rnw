\documentclass{article}

%\usepackage{apalike}
\usepackage{graphics}
\usepackage{amsmath}
\usepackage{indentfirst}
\usepackage[utf8]{inputenc}
\usepackage{latex8}
\usepackage{subfigure}
\usepackage{multirow}

\DeclareMathOperator{\var}{var}



% \VignetteIndexEntry{Multiclasstesting vignette}

\begin{document}

<< Multiclasstesting,include=FALSE,echo=FALSE>>=
options(keep.source = TRUE, width = 60)
Multiclasstesting <- packageDescription("Multiclasstesting")
@

\title{Multiclasstesting Vignette}
\author{Christine Nardini, Yuanhua Liu}
\maketitle


\section{The problem}

This is an introduction to the \verb@ Multiclasstesting@ package in R.  Specificity, sensitivity, negative and positive predictive value are used in combination to quantify different aspects of the accuracy of a binary test, evaluating different proportions of correctly and incorrectly classified items, when compared to a known classification, considered the gold standard. In this context the {\em test} is the ensemble of all the operations performed to classify each items; {\em positive} and {\em negatives} label the items according to the two classes ($c={0,1}$) they belong to; {\em true} (T) and {\em false} (F) represent the ability of the test to classify coherently or not a given item in the test classification with respect to the gold standard classification. 
These concepts are usually formalized with the  relationships in the left hand-side of Equations\,\ref{eq:binary.general}.

\begin{equation}\label{eq:binary.general}
\begin{array}{ccccc}
PPV & = &TP/TP+FP) & = &TP/ P_t\\
NPV & = &TN/(TN+FN)& = &TN/N_t\\
Se  & = &TP/(TP+FN)& = &TP/P_{gs}\\
Sp  & = &TN/(TN+FP)& = &TN/N_{gs}\\
\end{array}
\end{equation}

When the test classifies $n>2$ categories, these definitions become more complex to apply. In fact, the meaning of {\em positive} and {\em negative} is not relevant anymore, since there are now {\em positives}. Then, while the definition of {\em true} remains straightforward, as it indicates coherence between the classification of the test and the gold standard, the definition of {\em false} can be cumbersome, since there are $n-1$ ways to misclassify an item. 
To avoid confusion and ambiguities the actual values of all false can be identified by rewriting the problem in terms of a system of equation based on the relationships indicated in Table \ref{tab:multiclass}. 
Here $P_t, N_t$ represent the total number of positive and negative items that can be found in the test ($t$) categorization, and $P_{gs},N{gs}$ in the gold standard ($gs$) classification. 
The definitions can be generalized to $n>2$ classes changing the term negative and positive with the indices of the corresponding classes $c={0,1,...,n}$, and having $C_c$ to design the total number of positives for each given class. 
The system of equations obtained from the relationships in the rows and columns of Table \ref{tab:multiclass} contains $2 \cdot n$ equations (i.e. $TP+FP = P_t$) and $n \cdot (n-1) / 2 $ unknown ($x_{ij}$), it is thus completely specified for $n \le 3$
It is worth noticing, that with these general definitions, in case of 2-classes test, Se and Sp appear to be dual scores. Thus, when generalizing to $n$-classes it is possible to define the predictive ability of the test for each given class $c \in {0,1,..,n}$ as $PV_c = T_c/C_t$ and the Sensitivity/Specificity (now called S) for the same class $c$ as $S_c = T_c/C_{gs}$.
To clarify the situation it is extremely useful to rewrite the definitions as they are written on the right hand-side of Equation \ref{eq:binary.general}, namely:

For $n$ classes this gives:
\vspace{-0.3cm}
\begin{equation}\label{eq:n-ary}
\begin{array}{rcl}
PPV & = & \sum_c T_c /\sum_c C_{c,t}, c = {1,..,n} \\
NPV & = & T_0 /N_t  = T_0/C_{0,t}\\
Se  & = & \sum_{c}T_c / \sum_c C_{c,gs}, c = {1,..,n} \\
Sp  & = & T_0 /N_{gs} = T_0/C_{0,gs}\\
\end{array}
\end{equation}

\begin{table}
\caption{Classical definition and generalization to 3 classes for {\em true, false, negatives, positives.}}
\vspace{0.1cm}
\label{tab:multiclass}
\centering
\subfigure[Classical Definition]{
\begin{tabular}{c|c|c|c|c}
\multicolumn{2}{c}{}   &   \multicolumn{2}{c}{Gold Standard}      &    \\
    \cline{2-4}  &         &   T     &     F                                            &     \\  
\cline{2-4} \multirow{2}*{\rotatebox{90}{Test}}& P  & TP  & FP &  $\to  P_t$ \\
    \cline{2-4}  & N     &   FN   &     TN                                          &  $\to  N_t$   \\
    \cline{2-4}
\multicolumn{1}{c}{}  & \multicolumn{1}{c}{} & \multicolumn{1}{c}{$\downarrow$} & \multicolumn{1}{c}{$\downarrow$} &  \\ 
\multicolumn{1}{c}{}  & \multicolumn{1}{c}{} & \multicolumn{1}{c}{$P_{gs}$}         & \multicolumn{1}{c}{$N_{gs}$}      
\end{tabular}  
}\hspace{3cm}
\subfigure[3-Classes Definition]{
\begin{tabular}{c|c|c|c|c|c}
\multicolumn{2}{c}{}  &  \multicolumn{3}{c}{Gold Standard} &   \\
    \cline{2-5}  &   &   2     &     1                      & 0                &    \\  
    \cline{2-5}    
\multirow{3}{*}
{\rotatebox{90}{Test}}& 2  &   $T_2$ & $x_{12}$ & $x_{13}$ & $\to  C_{2,t}$ \\
\cline{2-5}  & 1 & $x_{21}$ & $T_1$      & $x_{23}$    &  $\to  C_{1,t}$ \\
\cline{2-5}  & 0 & $x_{31}$ & $x_{32}$  & $T_0$        &  $\to  C_{0,t}$ \\
\cline{2-5}
\multicolumn{1}{c}{}& \multicolumn{1}{c}{}& \multicolumn{1}{c}{$\downarrow$}& \multicolumn{1}{c}{$\downarrow$} &  \multicolumn{1}{c}{$\downarrow$}\\ 
\multicolumn{1}{c}{}& \multicolumn{1}{c}{}& \multicolumn{1}{c}{$C_{2,gs}$}   & \multicolumn{1}{c}{$C_{1,gs}$}  &  \multicolumn{1}{c}{$C_{0,gs}$}   \\   
\end{tabular}
}
\end{table}

This package is developed to estimate the performance of both binary and multiple test (n-ary is used to include both cases). The statistical scores described above are finally calculated as output of the function in this package. 

\section{Multiclasstesting usage}

\verb@ Nclasstest@ is the only function in \verb@Multiclasstesting@. It serves for the computation of the performance of n-class test.  In binary case, the output includes the statistical scores, PPV, NPV, Se and Sp. In multiple classes case, the output consists of two parts. One is called \verb@multi.performance@, indicating the details of the predictive value (PV) and Sensitivity/Specificity (S) for each class. The other, called \verb@binary.performance@, is to summarize the PPV, NPV, Se and Sp for the classification operations, as described in Equation \ref{eq:n-ary}. 
This is useful when interested in the ability of the n-ary test to identify positives and negative, globally. A common example of application is the computation of the performances of a gene network algorithm reconstruction: when interested in the directed
network each edge can belong to class 1 (direct interaction), class -1 (inverse interaction) or class 0 (no interaction). However, it may be interesting to know how the algorithm performs simply in terms of recognizing the existing connections (edges 1 AND -1) in this case the summary binary performances of the 3 class test are the correct way to compute PPV, NPV, Se, Sp.\\
For the binary case, R statement is , 
<<>>=
library(Multiclasstesting)
GS <- cbind(c(0,1),c(0,0),c(1,1))
T <-    cbind(c(1,1),c(1,0),c(1,1))
Nclasstest(T,GS)
@
where, GS and T are the arguments to the function \verb@ Nclasstest@, representing the results from Gold Standard and test, respectively. They can be matrices or vectors with the elements labeling the category type, as  \verb@0@ and \verb@1@ in the example above. 


For multiple-class test, 
<<>>=
library( Multiclasstesting)
GS <- cbind(c(0,-1,1),c(0,1,0),c(1,0,1))
T <-    cbind(c(1,-1,1),c(0,1,-1),c(0,1,1))
Nclasstest(T,GS)
@

\end{document}
